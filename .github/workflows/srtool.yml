name: Srtool build

env:
  SUBWASM_VERSION: 0.20.0

on:
  workflow_dispatch:
  workflow_call:
  push:
    tags:
      - 'v*'  # 匹配 v0.15.0-rc1 这样的格式

jobs:
  build:
    name: Build ${{ matrix.chain }} ${{ github.event.inputs.ref || github.ref_name }}
    strategy:
      fail-fast: false
      matrix:
        chain: ["bifrost-kusama", "bifrost-polkadot"]
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
          fetch-depth: 1

      - name: "🏗️ Build Runtime"
        id: srtool_build
        uses: chevdor/srtool-actions@v0.8.0
        env:
          BUILD_OPTS: "--features on-chain-release-build"
        with:
          profile: production
          chain: ${{ matrix.chain }}
          runtime_dir: runtime/${{ matrix.chain }}

      - name: "🔍 Summary"
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          echo "Runtime location: ${{ steps.srtool_build.outputs.wasm }}"
          # Copy files to flat structure
          cp ${{ steps.srtool_build.outputs.wasm_compressed }} ./${{ matrix.chain }}_runtime.compact.compressed.wasm

      - name: Archive Artifacts for ${{ matrix.chain }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.chain }}-runtime-${{ github.event.inputs.ref || github.ref_name }}
          path: |
            ${{ matrix.chain }}_runtime.compact.compressed.wasm
            ${{ matrix.chain }}-srtool-digest.json

      - name: Install subwasm ${{ env.SUBWASM_VERSION }}
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/v${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          sudo dpkg -i subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          subwasm --version
    
      - name: "🔍 Get Runtime information"
        id: runtime_info
        run: |
          # 保存压缩版本信息到变量
          echo "compressed_info<<EOF" >> $GITHUB_OUTPUT
          subwasm info ${{ steps.srtool_build.outputs.wasm_compressed }} >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          # 显示所有信息到日志
          subwasm info ${{ steps.srtool_build.outputs.wasm }}
          subwasm info ${{ steps.srtool_build.outputs.wasm_compressed }}
          subwasm meta ${{ steps.srtool_build.outputs.wasm }}

      - name: Send to Slack with Runtime Info
        if: success()
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          path: ${{ matrix.chain }}-runtime-${{ github.event.inputs.ref || github.ref_name }}.zip
          channel: runtime-releases
          initial_comment: |
            New runtime build for ${{ matrix.chain }} (${{ github.event.inputs.ref || github.ref_name }}) :rocket:
            
            Runtime Information:
            ```
            ${{ steps.runtime_info.outputs.compressed_info }}
            ```


